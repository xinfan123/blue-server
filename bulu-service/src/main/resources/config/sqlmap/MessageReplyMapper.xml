<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinfan.msgbox.service.dao.MessageReplyMapper" >
  <resultMap id="BaseResultMap" type="com.xinfan.msgbox.service.dao.entity.MessageReply" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="MSG_ID" property="msgId" jdbcType="BIGINT" />
    <result column="REPLY_USER_ID" property="replyUserId" jdbcType="BIGINT" />
    <result column="BE_REPLYED_USER_ID" property="beReplyedUserId" jdbcType="BIGINT" />
    <result column="CONTEXT" property="context" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, MSG_ID, REPLY_USER_ID, BE_REPLYED_USER_ID, CONTEXT, STATUS, CREATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xinfan.msgbox.service.dao.entity.MessageReplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_message_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_message_reply
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_message_reply
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinfan.msgbox.service.dao.entity.MessageReplyExample" >
    delete from t_message_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xinfan.msgbox.service.dao.entity.MessageReply" >
    insert into t_message_reply (ID, MSG_ID, REPLY_USER_ID, 
      BE_REPLYED_USER_ID, CONTEXT, STATUS, 
      CREATE_TIME)
    values (#{id,jdbcType=BIGINT}, #{msgId,jdbcType=BIGINT}, #{replyUserId,jdbcType=BIGINT}, 
      #{beReplyedUserId,jdbcType=BIGINT}, #{context,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xinfan.msgbox.service.dao.entity.MessageReply" >
    insert into t_message_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="msgId != null" >
        MSG_ID,
      </if>
      <if test="replyUserId != null" >
        REPLY_USER_ID,
      </if>
      <if test="beReplyedUserId != null" >
        BE_REPLYED_USER_ID,
      </if>
      <if test="context != null" >
        CONTEXT,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="msgId != null" >
        #{msgId,jdbcType=BIGINT},
      </if>
      <if test="replyUserId != null" >
        #{replyUserId,jdbcType=BIGINT},
      </if>
      <if test="beReplyedUserId != null" >
        #{beReplyedUserId,jdbcType=BIGINT},
      </if>
      <if test="context != null" >
        #{context,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinfan.msgbox.service.dao.entity.MessageReplyExample" resultType="java.lang.Integer" >
    select count(*) from t_message_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_message_reply
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.msgId != null" >
        MSG_ID = #{record.msgId,jdbcType=BIGINT},
      </if>
      <if test="record.replyUserId != null" >
        REPLY_USER_ID = #{record.replyUserId,jdbcType=BIGINT},
      </if>
      <if test="record.beReplyedUserId != null" >
        BE_REPLYED_USER_ID = #{record.beReplyedUserId,jdbcType=BIGINT},
      </if>
      <if test="record.context != null" >
        CONTEXT = #{record.context,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_message_reply
    set ID = #{record.id,jdbcType=BIGINT},
      MSG_ID = #{record.msgId,jdbcType=BIGINT},
      REPLY_USER_ID = #{record.replyUserId,jdbcType=BIGINT},
      BE_REPLYED_USER_ID = #{record.beReplyedUserId,jdbcType=BIGINT},
      CONTEXT = #{record.context,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinfan.msgbox.service.dao.entity.MessageReply" >
    update t_message_reply
    <set >
      <if test="msgId != null" >
        MSG_ID = #{msgId,jdbcType=BIGINT},
      </if>
      <if test="replyUserId != null" >
        REPLY_USER_ID = #{replyUserId,jdbcType=BIGINT},
      </if>
      <if test="beReplyedUserId != null" >
        BE_REPLYED_USER_ID = #{beReplyedUserId,jdbcType=BIGINT},
      </if>
      <if test="context != null" >
        CONTEXT = #{context,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinfan.msgbox.service.dao.entity.MessageReply" >
    update t_message_reply
    set MSG_ID = #{msgId,jdbcType=BIGINT},
      REPLY_USER_ID = #{replyUserId,jdbcType=BIGINT},
      BE_REPLYED_USER_ID = #{beReplyedUserId,jdbcType=BIGINT},
      CONTEXT = #{context,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>