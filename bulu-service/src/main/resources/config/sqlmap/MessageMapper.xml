<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinfan.msgbox.service.dao.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.xinfan.msgbox.service.dao.entity.Message" >
    <id column="MSG_ID" property="msgId" jdbcType="BIGINT" />
    <result column="TITLE" property="title" jdbcType="VARCHAR" />
    <result column="CONTEXT" property="context" jdbcType="VARCHAR" />
    <result column="VALID_TIME" property="validTime" jdbcType="TIMESTAMP" />
    <result column="DURATION_TIME" property="durationTime" jdbcType="INTEGER" />
    <result column="SEND_TYPE" property="sendType" jdbcType="INTEGER" />
    <result column="SEND_AREA" property="sendArea" jdbcType="VARCHAR" />
    <result column="SEND_DISTANCE" property="sendDistance" jdbcType="VARCHAR" />
    <result column="AMOUNT_STATUS" property="amountStatus" jdbcType="INTEGER" />
    <result column="AMOUNT" property="amount" jdbcType="DECIMAL" />
    <result column="MSG_STATUS" property="msgStatus" jdbcType="INTEGER" />
    <result column="CREATE_USER_ID" property="createUserId" jdbcType="BIGINT" />
    <result column="GPSY" property="gpsy" jdbcType="VARCHAR" />
    <result column="GPSX" property="gpsx" jdbcType="VARCHAR" />
    <result column="REGIN_CODE" property="reginCode" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="refresh_time" property="refreshTime" jdbcType="TIMESTAMP" />
    <result column="refresh_count" property="refreshCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    MSG_ID, TITLE, CONTEXT, VALID_TIME, DURATION_TIME, SEND_TYPE, SEND_AREA, SEND_DISTANCE, 
    AMOUNT_STATUS, AMOUNT, MSG_STATUS, CREATE_USER_ID, GPSY, GPSX, REGIN_CODE, CREATE_TIME, 
    refresh_time, refresh_count
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xinfan.msgbox.service.dao.entity.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_message
    where MSG_ID = #{msgId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_message
    where MSG_ID = #{msgId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinfan.msgbox.service.dao.entity.MessageExample" >
    delete from t_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xinfan.msgbox.service.dao.entity.Message"  useGeneratedKeys="true" keyProperty="msgId" >
    insert into t_message (MSG_ID, TITLE, CONTEXT, 
      VALID_TIME, DURATION_TIME, SEND_TYPE, 
      SEND_AREA, SEND_DISTANCE, AMOUNT_STATUS, 
      AMOUNT, MSG_STATUS, CREATE_USER_ID, 
      GPSY, GPSX, REGIN_CODE, 
      CREATE_TIME, refresh_time, refresh_count
      )
    values (#{msgId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{context,jdbcType=VARCHAR}, 
      #{validTime,jdbcType=TIMESTAMP}, #{durationTime,jdbcType=INTEGER}, #{sendType,jdbcType=INTEGER}, 
      #{sendArea,jdbcType=VARCHAR}, #{sendDistance,jdbcType=VARCHAR}, #{amountStatus,jdbcType=INTEGER}, 
      #{amount,jdbcType=DECIMAL}, #{msgStatus,jdbcType=INTEGER}, #{createUserId,jdbcType=BIGINT}, 
      #{gpsy,jdbcType=VARCHAR}, #{gpsx,jdbcType=VARCHAR}, #{reginCode,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{refreshTime,jdbcType=TIMESTAMP}, #{refreshCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xinfan.msgbox.service.dao.entity.Message"  useGeneratedKeys="true" keyProperty="msgId" >
    insert into t_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        MSG_ID,
      </if>
      <if test="title != null" >
        TITLE,
      </if>
      <if test="context != null" >
        CONTEXT,
      </if>
      <if test="validTime != null" >
        VALID_TIME,
      </if>
      <if test="durationTime != null" >
        DURATION_TIME,
      </if>
      <if test="sendType != null" >
        SEND_TYPE,
      </if>
      <if test="sendArea != null" >
        SEND_AREA,
      </if>
      <if test="sendDistance != null" >
        SEND_DISTANCE,
      </if>
      <if test="amountStatus != null" >
        AMOUNT_STATUS,
      </if>
      <if test="amount != null" >
        AMOUNT,
      </if>
      <if test="msgStatus != null" >
        MSG_STATUS,
      </if>
      <if test="createUserId != null" >
        CREATE_USER_ID,
      </if>
      <if test="gpsy != null" >
        GPSY,
      </if>
      <if test="gpsx != null" >
        GPSX,
      </if>
      <if test="reginCode != null" >
        REGIN_CODE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="refreshTime != null" >
        refresh_time,
      </if>
      <if test="refreshCount != null" >
        refresh_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        #{msgId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="context != null" >
        #{context,jdbcType=VARCHAR},
      </if>
      <if test="validTime != null" >
        #{validTime,jdbcType=TIMESTAMP},
      </if>
      <if test="durationTime != null" >
        #{durationTime,jdbcType=INTEGER},
      </if>
      <if test="sendType != null" >
        #{sendType,jdbcType=INTEGER},
      </if>
      <if test="sendArea != null" >
        #{sendArea,jdbcType=VARCHAR},
      </if>
      <if test="sendDistance != null" >
        #{sendDistance,jdbcType=VARCHAR},
      </if>
      <if test="amountStatus != null" >
        #{amountStatus,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="msgStatus != null" >
        #{msgStatus,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="gpsy != null" >
        #{gpsy,jdbcType=VARCHAR},
      </if>
      <if test="gpsx != null" >
        #{gpsx,jdbcType=VARCHAR},
      </if>
      <if test="reginCode != null" >
        #{reginCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refreshTime != null" >
        #{refreshTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refreshCount != null" >
        #{refreshCount,jdbcType=INTEGER},
      </if>
    </trim>
    
<!-- <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="msgId"> 
	SELECT LAST_INSERT_ID() 
</selectKey>  -->
    
    
  </insert>
  <select id="countByExample" parameterType="com.xinfan.msgbox.service.dao.entity.MessageExample" resultType="java.lang.Integer" >
    select count(*) from t_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_message
    <set >
      <if test="record.msgId != null" >
        MSG_ID = #{record.msgId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null" >
        TITLE = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.context != null" >
        CONTEXT = #{record.context,jdbcType=VARCHAR},
      </if>
      <if test="record.validTime != null" >
        VALID_TIME = #{record.validTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.durationTime != null" >
        DURATION_TIME = #{record.durationTime,jdbcType=INTEGER},
      </if>
      <if test="record.sendType != null" >
        SEND_TYPE = #{record.sendType,jdbcType=INTEGER},
      </if>
      <if test="record.sendArea != null" >
        SEND_AREA = #{record.sendArea,jdbcType=VARCHAR},
      </if>
      <if test="record.sendDistance != null" >
        SEND_DISTANCE = #{record.sendDistance,jdbcType=VARCHAR},
      </if>
      <if test="record.amountStatus != null" >
        AMOUNT_STATUS = #{record.amountStatus,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        AMOUNT = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.msgStatus != null" >
        MSG_STATUS = #{record.msgStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createUserId != null" >
        CREATE_USER_ID = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.gpsy != null" >
        GPSY = #{record.gpsy,jdbcType=VARCHAR},
      </if>
      <if test="record.gpsx != null" >
        GPSX = #{record.gpsx,jdbcType=VARCHAR},
      </if>
      <if test="record.reginCode != null" >
        REGIN_CODE = #{record.reginCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refreshTime != null" >
        refresh_time = #{record.refreshTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refreshCount != null" >
        refresh_count = #{record.refreshCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_message
    set MSG_ID = #{record.msgId,jdbcType=BIGINT},
      TITLE = #{record.title,jdbcType=VARCHAR},
      CONTEXT = #{record.context,jdbcType=VARCHAR},
      VALID_TIME = #{record.validTime,jdbcType=TIMESTAMP},
      DURATION_TIME = #{record.durationTime,jdbcType=INTEGER},
      SEND_TYPE = #{record.sendType,jdbcType=INTEGER},
      SEND_AREA = #{record.sendArea,jdbcType=VARCHAR},
      SEND_DISTANCE = #{record.sendDistance,jdbcType=VARCHAR},
      AMOUNT_STATUS = #{record.amountStatus,jdbcType=INTEGER},
      AMOUNT = #{record.amount,jdbcType=DECIMAL},
      MSG_STATUS = #{record.msgStatus,jdbcType=INTEGER},
      CREATE_USER_ID = #{record.createUserId,jdbcType=BIGINT},
      GPSY = #{record.gpsy,jdbcType=VARCHAR},
      GPSX = #{record.gpsx,jdbcType=VARCHAR},
      REGIN_CODE = #{record.reginCode,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      refresh_time = #{record.refreshTime,jdbcType=TIMESTAMP},
      refresh_count = #{record.refreshCount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinfan.msgbox.service.dao.entity.Message" >
    update t_message
    <set >
      <if test="title != null" >
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="context != null" >
        CONTEXT = #{context,jdbcType=VARCHAR},
      </if>
      <if test="validTime != null" >
        VALID_TIME = #{validTime,jdbcType=TIMESTAMP},
      </if>
      <if test="durationTime != null" >
        DURATION_TIME = #{durationTime,jdbcType=INTEGER},
      </if>
      <if test="sendType != null" >
        SEND_TYPE = #{sendType,jdbcType=INTEGER},
      </if>
      <if test="sendArea != null" >
        SEND_AREA = #{sendArea,jdbcType=VARCHAR},
      </if>
      <if test="sendDistance != null" >
        SEND_DISTANCE = #{sendDistance,jdbcType=VARCHAR},
      </if>
      <if test="amountStatus != null" >
        AMOUNT_STATUS = #{amountStatus,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        AMOUNT = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="msgStatus != null" >
        MSG_STATUS = #{msgStatus,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        CREATE_USER_ID = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="gpsy != null" >
        GPSY = #{gpsy,jdbcType=VARCHAR},
      </if>
      <if test="gpsx != null" >
        GPSX = #{gpsx,jdbcType=VARCHAR},
      </if>
      <if test="reginCode != null" >
        REGIN_CODE = #{reginCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refreshTime != null" >
        refresh_time = #{refreshTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refreshCount != null" >
        refresh_count = #{refreshCount,jdbcType=INTEGER},
      </if>
    </set>
    where MSG_ID = #{msgId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinfan.msgbox.service.dao.entity.Message" >
    update t_message
    set TITLE = #{title,jdbcType=VARCHAR},
      CONTEXT = #{context,jdbcType=VARCHAR},
      VALID_TIME = #{validTime,jdbcType=TIMESTAMP},
      DURATION_TIME = #{durationTime,jdbcType=INTEGER},
      SEND_TYPE = #{sendType,jdbcType=INTEGER},
      SEND_AREA = #{sendArea,jdbcType=VARCHAR},
      SEND_DISTANCE = #{sendDistance,jdbcType=VARCHAR},
      AMOUNT_STATUS = #{amountStatus,jdbcType=INTEGER},
      AMOUNT = #{amount,jdbcType=DECIMAL},
      MSG_STATUS = #{msgStatus,jdbcType=INTEGER},
      CREATE_USER_ID = #{createUserId,jdbcType=BIGINT},
      GPSY = #{gpsy,jdbcType=VARCHAR},
      GPSX = #{gpsx,jdbcType=VARCHAR},
      REGIN_CODE = #{reginCode,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      refresh_time = #{refreshTime,jdbcType=TIMESTAMP},
      refresh_count = #{refreshCount,jdbcType=INTEGER}
    where MSG_ID = #{msgId,jdbcType=BIGINT}
  </update>
</mapper>