<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinfan.msgbox.service.dao.UserLinkmanMapper" >
  <resultMap id="BaseResultMap" type="com.xinfan.msgbox.service.dao.entity.UserLinkman" >
    <id column="USER_ID" property="userId" jdbcType="BIGINT" />
    <id column="LINK_USER_ID" property="linkUserId" jdbcType="BIGINT" />
    <result column="LINK_REMARK" property="linkRemark" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    USER_ID, LINK_USER_ID, LINK_REMARK, CREATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xinfan.msgbox.service.dao.entity.UserLinkmanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_linkman
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.xinfan.msgbox.service.dao.entity.UserLinkmanKey" >
    select 
    <include refid="Base_Column_List" />
    from t_user_linkman
    where USER_ID = #{userId,jdbcType=BIGINT}
      and LINK_USER_ID = #{linkUserId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.xinfan.msgbox.service.dao.entity.UserLinkmanKey" >
    delete from t_user_linkman
    where USER_ID = #{userId,jdbcType=BIGINT}
      and LINK_USER_ID = #{linkUserId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinfan.msgbox.service.dao.entity.UserLinkmanExample" >
    delete from t_user_linkman
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xinfan.msgbox.service.dao.entity.UserLinkman" >
    insert into t_user_linkman (USER_ID, LINK_USER_ID, LINK_REMARK, 
      CREATE_TIME)
    values (#{userId,jdbcType=BIGINT}, #{linkUserId,jdbcType=BIGINT}, #{linkRemark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xinfan.msgbox.service.dao.entity.UserLinkman" >
    insert into t_user_linkman
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="linkUserId != null" >
        LINK_USER_ID,
      </if>
      <if test="linkRemark != null" >
        LINK_REMARK,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="linkUserId != null" >
        #{linkUserId,jdbcType=BIGINT},
      </if>
      <if test="linkRemark != null" >
        #{linkRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinfan.msgbox.service.dao.entity.UserLinkmanExample" resultType="java.lang.Integer" >
    select count(*) from t_user_linkman
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_user_linkman
    <set >
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.linkUserId != null" >
        LINK_USER_ID = #{record.linkUserId,jdbcType=BIGINT},
      </if>
      <if test="record.linkRemark != null" >
        LINK_REMARK = #{record.linkRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_user_linkman
    set USER_ID = #{record.userId,jdbcType=BIGINT},
      LINK_USER_ID = #{record.linkUserId,jdbcType=BIGINT},
      LINK_REMARK = #{record.linkRemark,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinfan.msgbox.service.dao.entity.UserLinkman" >
    update t_user_linkman
    <set >
      <if test="linkRemark != null" >
        LINK_REMARK = #{linkRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=BIGINT}
      and LINK_USER_ID = #{linkUserId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinfan.msgbox.service.dao.entity.UserLinkman" >
    update t_user_linkman
    set LINK_REMARK = #{linkRemark,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where USER_ID = #{userId,jdbcType=BIGINT}
      and LINK_USER_ID = #{linkUserId,jdbcType=BIGINT}
  </update>
  
  
  <select id="selectListForHttpService" resultMap="BaseResultMap" parameterType="com.xinfan.msgbox.service.dao.entity.UserLinkmanExample" >
    select
    <include refid="Base_Column_List" />
    from t_user_linkman where 1=1
    <if test="userId != null and userId != ''" >
      and user_id = #{userId}
    </if>
    <if test="orderBy != null and orderBy != ''" >
      order by ${orderBy}
    </if>
     limit ${currentRow},${pageSize}
  </select>
</mapper>